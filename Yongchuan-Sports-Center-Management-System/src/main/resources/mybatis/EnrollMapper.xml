<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cqwu.graduation.mapper.EnrollMapper">
  <resultMap id="BaseResultMap" type="com.cqwu.graduation.bean.Enroll">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="entry_match_id" jdbcType="INTEGER" property="entryMatchId" />
    <result column="match_state" jdbcType="VARCHAR" property="matchState" />
    <result column="entry_subject_id" jdbcType="INTEGER" property="entrySubjectId" />
    <result column="subject_state" jdbcType="VARCHAR" property="subjectState" />
    <result column="raw_add_time" jdbcType="TIMESTAMP" property="rawAddTime" />
    <result column="raw_update_time" jdbcType="TIMESTAMP" property="rawUpdateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, entry_match_id, match_state, entry_subject_id, subject_state, raw_add_time, 
    raw_update_time
  </sql>
  <select id="selectByExample" parameterType="com.cqwu.graduation.bean.EnrollExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from enroll
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.cqwu.graduation.bean.EnrollExample">
    delete from enroll
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cqwu.graduation.bean.Enroll">
    insert into enroll (id, username, entry_match_id, 
      match_state, entry_subject_id, subject_state, 
      raw_add_time, raw_update_time)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{entryMatchId,jdbcType=INTEGER}, 
      #{matchState,jdbcType=VARCHAR}, #{entrySubjectId,jdbcType=INTEGER}, #{subjectState,jdbcType=VARCHAR}, 
     now(), now())
  </insert>
  <insert id="insertSelective" parameterType="com.cqwu.graduation.bean.Enroll">
    insert into enroll
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="entryMatchId != null">
        entry_match_id,
      </if>
      <if test="matchState != null">
        match_state,
      </if>
      <if test="entrySubjectId != null">
        entry_subject_id,
      </if>
      <if test="subjectState != null">
        subject_state,
      </if>
      <if test="rawAddTime != null">
        raw_add_time,
      </if>
      <if test="rawUpdateTime != null">
        raw_update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="entryMatchId != null">
        #{entryMatchId,jdbcType=INTEGER},
      </if>
      <if test="matchState != null">
        #{matchState,jdbcType=VARCHAR},
      </if>
      <if test="entrySubjectId != null">
        #{entrySubjectId,jdbcType=INTEGER},
      </if>
      <if test="subjectState != null">
        #{subjectState,jdbcType=VARCHAR},
      </if>
      <if test="rawAddTime != null">
        #{rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rawUpdateTime != null">
        #{rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cqwu.graduation.bean.EnrollExample" resultType="java.lang.Long">
    select count(*) from enroll
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update enroll
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.entryMatchId != null">
        entry_match_id = #{record.entryMatchId,jdbcType=INTEGER},
      </if>
      <if test="record.matchState != null">
        match_state = #{record.matchState,jdbcType=VARCHAR},
      </if>
      <if test="record.entrySubjectId != null">
        entry_subject_id = #{record.entrySubjectId,jdbcType=INTEGER},
      </if>
      <if test="record.subjectState != null">
        subject_state = #{record.subjectState,jdbcType=VARCHAR},
      </if>
      <if test="record.rawAddTime != null">
        raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rawUpdateTime != null">
        raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update enroll
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      entry_match_id = #{record.entryMatchId,jdbcType=INTEGER},
      match_state = #{record.matchState,jdbcType=VARCHAR},
      entry_subject_id = #{record.entrySubjectId,jdbcType=INTEGER},
      subject_state = #{record.subjectState,jdbcType=VARCHAR},
      raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>